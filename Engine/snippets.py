#A=np.array([[2,2],[2,mpi(3,4)]])
AB=np.array([
[mpi(2,2.01),2,1,0,2,3,0,1,0,3],
[1,mpi(2,2.01),1,1,0,3,0,-1,0,3],
[0,2,mpi(2,2.01),0,2,-2,0,1,0,3],
[-3,2,1,mpi(2,2.01),0,3,0,1,0,0],
[2,0,1,2,mpi(2,2.01),3,0,4,0,3],
[-2,1,1,0,-2,mpi(2,2.01),0,-1,3,0],
[1,2,1,0,2,-1,mpi(2,2.01),1,0,3],
[0,2,1,0,2,3,0,mpi(2,2.01),0,3],
[-1,1,1,0,2,3,0,1,mpi(2,2.01),3],
[-2,2,1,0,2,3,0,1,0,mpi(2,2.01)]
])

ABI=np.array([
[(2,2),(2,2),(1,1),(0,0),(2,2),(3,3),(0,0),(1,1),(0,0),(3,3)],
[(1,1),(2,2),(1,1),(1,1),(0,0),(3,0),(0,0),(-1,-1),(0,0),(3,3)],
[(0,0),(2,2),(2,2),(0,0),(2,2),(-2,-2),(0,0),(1,1),(0,0),(3,3)],
[(-3,-3),(2,2),(1,1),(2,2),(0,0),(3,3),(0,0),(1,1),(0,0),(0,0)],
[(2,2),(0,0),(1,1),(2,2),(2,2),(3,3),(0,0),(4,4),(0,0),(3,3)],
[(-2,-2),(1,1),(1,1),(0,0),(-2,-2),(2,2),(0,0),(-1,-1),(3,3),(0,0)],
[(1,1),(2,2),(1,1),(0,0),(2,2),(-1,-1),(2,2),(1,1),(0,0),(3,3)],
[(0,0),(2,2),(1,1),(0,0),(2,2),(3,3),(0,0),(2,2),(0,0),(3,3)],
[(-1,-1),(1,1),(1,1),(0,0),(2,2),(3,3),(0,0),(1,1),(2,2),(3,3)],
[(-2,-2),(2,2),(1,1),(0,0),(2,2),(3,3),(0,0),(1,0),(0,0),(2,2)]
])
ABU=np.array([
[2,2,1,0,2,3,0,1,0,3],
[1,2,1,1,0,3,0,-1,0,3],
[0,2,2,0,2,-2,0,1,0,3],
[-3,2,1,2,0,3,0,1,0,0],
[2,0,1,2,2,3,0,4,0,3],
[-2,1,1,0,-2,2,0,-1,3,0],
[1,2,1,0,2,-1,2,1,0,3],
[0,2,1,0,2,3,0,2,0,3],
[-1,1,1,0,2,3,0,1,2,3],
[-2,2,1,0,2,3,0,1,0,2]
])
AC=np.array([
[1,2,1,0,2,3,0,1,0,3],
[1,1,1,1,0,3,0,-1,0,3],
[0,2,1,0,2,-2,0,1,0,3],
[-3,2,1,1,0,3,0,1,0,0],
[2,0,1,2,1,3,0,4,0,3],
[-2,1,1,0,-2,1,0,-1,3,0],
[1,2,1,0,2,-1,1,1,0,3],
[0,2,1,0,2,3,0,1,0,3],
[-1,1,1,0,2,3,0,1,1,3],
[-2,2,1,0,2,3,0,1,0,1]
])
A=np.array([
[1,2,1],
[1,1,1],
[0,2,1]
])
B=np.array([
[(2,2),(2,2),(1,1)],
[(1,1),(2,2),(1,1)],
[(0,0),(2,2),(2,2)]
])
BC=np.array([
[2,2,1],
[1,2,1],
[0,2,2]
])
'''B=np.array([
[(2,3),(2,2)],
[(1,1),(2,3)],
])'''

M1=np.array([
[1,6,3,4],
[2,0,1,2],
[1,0,0,1],
[3,0,3,0],
])

M1I=np.array([
[(1,1),(6,6),(3,3),(4,4)],
[(2,2),(0,0),(1,1),(2,2)],
[(1,1),(0,0),(0,0),(1,1)],
[(3,3),(0,0),(3,3),(0,0)],
])

MP1=np.array([
[mpi(1,1),6,3,4],
[2,0,1,2],
[1,0,0,mpi(1,1)],
[3,0,3,0],
])










#--------------------------------------------
#print(np.linalg.inv(M1))

print("")
matA=IntervalMatrix(MP1)
start_time=time.time()
invA=matA.inverse()
end_time=time.time()-start_time
print(invA)
print(end_time)

#print("-")
#IntervalMatrix.display(invA)
#matA.inverse()

